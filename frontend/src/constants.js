export const LANGUAGE_VERSIONS = {
  javascript: '18.15.0',
  typescript: '5.0.3',
  python: '3.10.0',
  java: '15.0.2',
  csharp: '6.12.0',
  php: '8.2.3',
  matl: '22.5.0',
  bash: '5.2.0',
  befunge93: '0.2.0',
  bqn: '1.0.0',
  brachylog: '1.0.0',
  cjam: '0.6.5',
  clojure: '1.10.3',
  cobol: '3.1.2',
  coffeescript: '2.5.1',
  cow: '1.0.0',
  crystal: '0.36.1',
  dart: '2.19.6',
  dash: '0.5.11',
  fsharp: '5.0.201',
  dragon: '1.9.8',
  elixir: '1.11.3',
  emacs: '27.1.0',
  emojicode: '1.0.2',
  erlang: '23.0.0',
  file: '0.0.1',
  forte: '1.0.0',
  forth: '0.7.3',
  freebasic: '1.9.0',
  awk: '5.1.0',
  c: '10.2.0',
  'c++': '10.2.0',
  d: '10.2.0',
  fortran: '10.2.0',
  go: '1.16.2',
  golfscript: '1.0.0',
  groovy: '3.0.7',
  haskell: '9.0.1',
  iverilog: '11.0.0',
  japt: '2.0.0',
  jelly: '0.1.31',
  julia: '1.8.5',
  kotlin: '1.8.20',
  lisp: '2.1.2',
  llvm_ir: '12.0.1',
  lolcode: '0.11.2',
  lua: '5.4.4',
  nim: '1.6.2',
  ocaml: '4.12.0',
  octave: '8.1.0',
  osabie: '1.0.1',
  paradoc: '0.6.0',
  pascal: '3.2.2',
  perl: '5.36.0',
  ponylang: '0.39.0',
  prolog: '8.2.4',
  pure: '0.68.0',
  powershell: '7.1.4',
  pyth: '1.0.0',
  python2: '2.7.18',
  racket: '8.3.0',
  raku: '6.100.0',
  retina: '1.2.0',
  rockstar: '1.0.0',
  rscript: '4.1.1',
  ruby: '3.0.1',
  rust: '1.68.2',
  samarium: '0.3.1',
  scala: '3.2.2',
  smalltalk: '3.2.3',
  sqlite3: '3.36.0',
  swift: '5.3.3',
  vlang: '0.3.3',
  vyxal: '2.4.1',
  yeethon: '3.10.0',
  zig: '0.10.1',
};

export const CODE_SNIPPETS = {
  javascript: `function greet(name) {\n\tconsole.log("Hello, " + name + "!");\n}\n\ngreet("Maya");\n`,
  typescript: `type Params = {\n\tname: string;\n}\n\nfunction greet(data: Params) {\n\tconsole.log("Hello, " + data.name + "!");\n}\n\ngreet({ name: "Maya" });\n`,
  python: `def greet(name):\n\tprint("Hello, " + name + "!")\n\ngreet("Maya")\n`,
  java: `public class HelloWorld {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println("Hello Maya");\n\t}\n}\n`,
  csharp:
    'using System;\n\nnamespace HelloWorld\n{\n\tclass Hello { \n\t\tstatic void Main(string[] args) {\n\t\t\tConsole.WriteLine("Hello Maya in C#");\n\t\t}\n\t}\n}\n',
  php: "<?php\n\n$name = 'Maya';\necho $name;\n",
  matl: `fprintf('Hello, Maya!');\n`,
  bash: `echo "Hello, Maya"\n`,
  befunge93: `>              v\nv  ,,,,,,,,,<\n>  ^"!yaM ,olleH"\n`,
  bqn: `‚àä‚ä¢‚Üê'Hello, Maya'\n`,
  brachylog: `{'Hello, Maya'}.\n`,
  cjam: `"Hello, Maya"`,
  clojure: `(println "Hello, Maya")\n`,
  cobol: `IDENTIFICATION DIVISION.\nPROGRAM-ID. HelloWorld.\nPROCEDURE DIVISION.\n    DISPLAY 'Hello, Maya'.\n    STOP RUN.\n`,
  coffeescript: `greet = (name) ->\n  console.log "Hello, #{name}!"\n\ngreet "Maya"\n`,
  cow: `"Hello, Maya"\n`,
  crystal: `puts "Hello, Maya!"\n`,
  dart: `void main() {\n  print("Hello, Maya!");\n}\n`,
  dash: `echo "Hello, Maya"\n`,
  fsharp: `open System\nprintfn "Hello, Maya"\n`,
  dragon: `Dragon.language="Hello, Maya"`,
  elixir: `IO.puts "Hello, Maya"\n`,
  emacs: `(message "Hello, Maya")\n`,
  emojicode: `üëã\n`,
  erlang: `io:format("Hello, Maya~n").\n`,
  file: `Hello, Maya\n`,
  forte: `Hello, Maya\n`,
  forth: `."Hello, Maya"\n`,
  freebasic: `Print "Hello, Maya"\n`,
  awk: `BEGIN {\n  print "Hello, Maya"\n}\n`,
  c: `#include <stdio.h>\n\nint main() {\n\tprintf("Hello, Maya\\n");\n\treturn 0;\n}\n`,
  'c++': `#include <iostream>\n\nint main() {\n\tstd::cout << "Hello, Maya" << std::endl;\n\treturn 0;\n}\n`,
  d: `import std.stdio;\n\nvoid main() {\n\twriteln("Hello, Maya");\n}\n`,
  fortran: `program HelloWorld\n\tprint *, "Hello, Maya"\nend program HelloWorld\n`,
  go: `package main\n\nimport "fmt"\n\nfunc main() {\n\tfmt.Println("Hello, Maya")\n}\n`,
  golfscript: `"Hello, Maya"`,
  groovy: `println 'Hello, Maya'\n`,
  haskell: `main = putStrLn "Hello, Maya"\n`,
  iverilog: `initial begin\n\t$display("Hello, Maya");\nend\n`,
  japt: `"Hello, Maya"\n`,
  jelly: `‚ÄúHello, Maya‚Äù`,
  julia: `println("Hello, Maya")\n`,
  kotlin: `fun main() {\n\tprintln("Hello, Maya")\n}\n`,
  lisp: `(format t "Hello, Maya")\n`,
  llvm_ir: `; ModuleID = 'HelloMaya'\n\ndefine i32 @main() {\n\tret i32 0\n}\n`,
  lolcode: `HAI 1.2\n\tVISIBLE "Hello, Maya"\nKTHXBYE\n`,
  lua: `print("Hello, Maya")\n`,
  nim: `echo "Hello, Maya"\n`,
  ocaml: `print_endline "Hello, Maya";;\n`,
  octave: `printf("Hello, Maya\\n");\n`,
  osabie: `."Hello, Maya"\n`,
  paradoc: `'Hello, Maya'\n`,
  pascal: `program HelloWorld;\nbegin\n\twriteln('Hello, Maya');\nend.\n`,
  perl: `\nprint "Hello, Maya\\n";\n`,
  ponylang: `actor Main\n  new create(env: Env) =>\n    Env.out.print("Hello, Maya")\n  end\nend\n`,
  prolog: `:- initialization(main).\n\nmain :-\n\twrite('Hello, Maya').\n`,
  pure: `stdout "Hello, Maya"\n`,
  powershell: `Write-Output "Hello, Maya"\n`,
  pyth: `\n."Hello, Maya"\n`,
  python2: `print "Hello, Maya"\n`,
  racket: `#lang racket\n(printf "Hello, Maya")\n`,
  raku: `say "Hello, Maya"\n`,
  retina: `"Hello, Maya";\n`,
  rockstar: `Say "Hello, Maya"`,
  rscript: `print("Hello, Maya")\n`,
  ruby: `puts "Hello, Maya"\n`,
  rust: `fn main() {\n\tprintln!("Hello, Maya");\n}\n`,
  samarium: `println("Hello, Maya")\n`,
  scala: `object HelloWorld extends App {\n\tprintln("Hello, Maya")\n}\n`,
  smalltalk: `Transcript show: 'Hello, Maya'; cr.\n`,
  sqlite3: `SELECT 'Hello, Maya';\n`,
  swift: `print("Hello, Maya")\n`,
  vlang: `fn main() {\n\tprintln("Hello, Maya")\n}\n`,
  vyxal: `‚ÄúHello, Maya‚Äù`,
  yeethon: `print("Hello, Maya")\n`,
  zig: `const std = @import("std");\n\npub fn main() !void {\n\tconst stdout = std.io.getStdOut().writer();\n\ttry stdout.print("Hello, Maya\\n");\n\tdefer stdout.flush();\n}\n`,
};
